{"version":3,"file":"BeInLearnKotlin.js","sources":["../../src/main/kotlin/main.kt"],"sourcesContent":["import com.github.salomonbrys.revealkt.*\nimport kotlinx.html.TagConsumer\nimport kotlinx.html.dom.append\nimport kotlinx.html.js.*\nimport kotlinx.html.style\nimport org.w3c.dom.HTMLElement\nimport kotlin.browser.document\n\nfun TagConsumer<HTMLElement>.fadeInAppear(index: Int = -1) = fragment(\"fade-in-appear\", index)\n\nfun TagConsumer<HTMLElement>.fadeOutDisappear(index: Int = -1) = fragment(\"fade-out-disappear\", index)\n\nfun TagConsumer<HTMLElement>.replace(index: Int, from: String, to: String) {\n    fadeInAppear(index).span { +to}\n    fadeOutDisappear(index).span { +from }\n}\n\nfun TagConsumer<HTMLElement>.stamp(index: Int = -1) = fragment(\"stamp\", index)\n\n\n\nfun AnimText.fInA(index: Int, text: String) = fragment(index, \"fade-in-appear current-blue\", text)\n\nfun AnimText.fInB(index: Int, text: String) = fragment(index, \"current-blue\", text)\n\nfun AnimText.fOutD(index: Int, text: String) = fragment(index, \"fade-out-disappear\", text)\n\nfun AnimText.replace(index: Int, from: String, to: String) = fInA(index, to) + fOutD(index, from)\n\nfun AnimText.curB(index: Int, text: String) = fragment(index, \"current-visible current-blue\", text)\n\nfun AnimText.error(text: String) = span(\"error\", text)\n\nfun AnimText.warning(text: String) = span(\"warning\", text)\n\n\n\nfun main(args: Array<String>) {\n\n    document.body!!.append {\n        revealSlides {\n            section {\n                slide {\n                    h2 { +\"Be In,\" ; br() ; +\"Learn Kotlin!\" }\n                }\n                slide {\n                    img(src = \"imgs/Avatar.jpg\") {\n                        style = \"width: 20%; border-radius: 100%; box-shadow: 3px 3px 20px #555;\"\n                    }\n                    br()\n                    +\"Salomon BRYS\"\n                    br()\n                    a(href = \"https://github.com/salomonbrys\") { +\"github.com/salomonbrys\" }\n                    br()\n                    a(href = \"https://twitter.com/salomonbrys\") { +\"@salomonbrys\" }\n\n                }\n            }\n\n            slide {\n                h2 { +\"Goals of this talk\" }\n                ul {\n                    fadeUp().li {\n                        +\"NOT a tutorial\"\n                        fadeIn().span {\n                            +\": \" ; a(href = \"https://kotlinlang.org\") { +\"kotlinlang.org\" }\n                        }\n                    }\n                    fadeUp().li {\n                        +\"NOT a language course\"\n                        fadeIn().span {\n                            +\": \" ; a(href = \"https://github.com/Kotlin/kotlin-koans\") { +\"Kotlin koans\" }\n                        }\n                    }\n                    fadeUp().li {\n                        +\"Introduction\"\n                        fadeIn().span {\n                            +\": \"\n                            b(classes = \"flicker\") {\n                                style = \"color: red\"\n                                +\"Wow effect!\"\n                            }\n                        }\n                    }\n                }\n            }\n\n            section {\n                slide {\n                    h2 { +\"Why Kotlin?\" }\n                }\n\n                slide {\n                    lazyImg(src = \"imgs/loc.png\")\n                }\n\n                slide {\n                    h2 { +\"Kotlin is...\" }\n\n                    ul {\n                        fadeUp().li {\n                            +\"Built BY Industry\"\n                            fadeIn().span { +\": Jetbrains\" }\n                        }\n                        fadeUp().li {\n                            +\"Built FOR Industry\"\n                            fadeIn().span { +\": no weird stuff\" }\n                        }\n                        fadeUp().li { +\"Complete Java interop\" }\n                        fadeUp().li { +\"Very easy\" }\n                    }\n                }\n            }\n\n            section {\n                slide {\n                    h2 { +\"Types\" }\n\n                    hlCode(\"kotlin\") {\n                        +animText {\n                            \"\"\"\n                                ${hl(1, \"fun\")} <T: Any> connect(uriStr${hl(2, \": String\")})${hl(2, \": Connection\")} {\n                                    val uri${fOutD(4, hl(2, \": URI\"))} = ${hl(3, \"URI(uriStr)\")}\n                                }\n                            \"\"\"\n                        }\n                    }\n                }\n\n                slide {\n                    h2 { +\"Nullability\" }\n\n                    hlCode(\"kotlin\") {\n                        +animText {\n                            \"\"\"\n                                fun connect(uriStr: String${hl(1, \"?\")}${fInA(4, \" = null\")} {\n                                    ${fInB(2, \"val uriStr = uriStr ${hl(3, \"?:\")} DEFAULT_URI\")}\n                                    val uri = URI(uriStr)\n                                                  ${cur(1, error(\"^^^^^^\"))}\n                                }\n                            \"\"\"\n                        }\n                    }\n\n                    fadeIn().i { +\"Nullability is \" ; b { +\"part of the type\" } ; +\"!\" }\n\n                    stamp().b {\n                        style = \"position: absolute; color: red; left: 0px; top: 26%; font-size: 210%;\"\n                        span {\n                            style = \"display: inline-block; transform: rotate(-15deg)\"\n                            +\"Million dollar mistake\\nFIXED!\"\n                        }\n                    }\n                }\n            }\n\n            section {\n                slide {\n                    h2 { +\"Java interop\" }\n                    replace(1, \"Wight\", \"List\")\n                    +\" is \"\n                    replace(1, \"Wight\", \"List\")\n                    br()\n                    replace(1, \"Dylan\", \"Map\")\n                    +\" is \"\n                    replace(1, \"Dylan\", \"Map\")\n                }\n\n                slide {\n                    h2 { +\"Nullability: K -> J\" }\n\n                    small(\"fileName\") { +\"Foo.kt:\" }\n                    hlCode(\"kotlin\") {\n                        +\"fun bar(str: String) {}\"\n                    }\n\n                    small(\"fileName\") { +\"Test.java:\" }\n                    hlCode(\"java\") {\n                        +animText { \"\"\"\n                            ${hl(1, \"FooKt\")}.bar(null);\n                                      ${fIn(2, warning(\"^^^^\"))}\n                        \"\"\" }\n                    }\n\n                    fragment().i { +\"Nullability can only be \" ; b { +\"enforced\" } ; +\" in Kotlin code.\" }\n                }\n\n                slide {\n                    h2 { +\"Nullability: J -> K\" }\n\n                    small(\"fileName\") { +\"System.java:\" }\n                    hlCode(\"java\") {\n                        +\"static String platform() { return \\\"Whatever\\\"; }\"\n                    }\n\n                    small(\"fileName\") { +\"test.kt:\" }\n                    hlCode(\"kotlin\") {\n                        +animText { \"\"\"\n                            val pn${fInA(2, \": String\")} = System.platform() ${fIn(1, \"// ctrl+shift+P -> String${fOutD(2, \"!\")}\")}\n                        \"\"\" }\n                    }\n\n                    fragment().i { +\"Kotlin is \" ; b { +\"permissive\" } ; +\" when using java code.\" }\n                    br()\n                    fragment().i { +\"Remember \" ; b { +\"ctrl+shift+P\" } ; +\"!!!\" }\n                }\n            }\n\n            section {\n                slide {\n                    h2 { +\"Properties\" }\n\n                    hlCode(\"kotlin\") {\n                        style = \"font-size: 85%; line-height: 1.2em; max-height: 500px;\"\n\n                        +animText {\n                            \"\"\"\n                                ${fInA(7, \"data\")} class User${hl(1, \"(${fInA(6, \"var \")}firstName: String, ${fInA(6, \"var \")}lastName: String)\")} ${fOut(8, \"{\")}\n                                    ${fOut(6, \"\"\"${fOutD(3, \"private \")}var firstName ${fInB(2, \"= firstName\")}\n                                    ${fOutD(3, \"private \")}var lastName ${fInB(2, \"= lastName\")}\"\"\")}\n                                        ${curB(4, \"\"\"get() = field\n                                        set(value) { field = value }\"\"\")}\n\n                                    ${fOut(2, hl(1, \"\"\"init {\n                                        this.firstName = firstName\n                                        this.lastName = lastName\n                                    }\"\"\"))}\n\n                                    ${fOut(3, \"\"\"fun getFirstName() = firstName\n                                    fun setFirstName(firstName: String) { this.firstName = firstName }\n\n                                    fun getLastName() = lastName\n                                    fun setLastName() { this.lastName = lastName }\"\"\")}\n\n                                    ${fOut(7, \"\"\"fun toString() = \"User{firstName=${\"\\$firstName\"}, lastName=${\"\\$lastName\"}}\"\n\n                                    fun hashcode() = firstName.hashCode() * lastName.hashCode()\"\"\")}\n                                ${fOut(8, \"}\")}\n                            \"\"\"\n                        }\n                    }\n                }\n\n                slide {\n                    h2 { +\"Properties\" }\n\n                    hlCode(\"kotlin\") {\n                        +animText {\n                            \"\"\"\n                                class MainView {\n                                    val login ${hl(1, \"by\")} fromLayout(EditText::class)\n                                }\n\n                                ${fIn(2, \"fun <T${hl(3, \": View\")}> fromLayout(cls: KClass<T>): ${hl(4, \"ReadOnlyProperty<T>\")}\")}\n                            \"\"\"\n                        }\n                    }\n\n                    fragment().i { +\"Delegated properties are used for \" ; b { +\"lazy retrieval\" } ; +\" and for \" ; b { +\"injection\" } ; +\".\" }\n                }\n            }\n\n            section {\n                slide {\n                    h2 { +\"Fonctions\" }\n\n                    hlCode(\"kotlin\") {\n                        +animText {\n                            \"\"\"\n                                fun ${fInA(2, \"Connection.\")}updateUser(${fOutD(2, \"${hl(1, \"con: Connection\")}, \")}user: User)\n\n                                ${fInA(2, \"con.\")}updateUser(${fOutD(2, \"${hl(1, \"con\")}, \")}user)\n\n\n                                ${fIn(3, \"\"\"fun <T> ${fInA(4, \"Map<String, T>.\")}prefixed(${fOutD(4, \"map: Map<String, T>, \")}prefix: String): List<T>\n\n                                val entries = ${fInA(4, \"map.\")}prefixed(${fOutD(4, \"map, \")}\"_\")\"\"\")}\n                            \"\"\"\n                        }\n                    }\n                }\n\n                slide {\n                    h2 { +\"Lambdas\" }\n\n                    hlCode(\"kotlin\") {\n                        +animText {\n                            \"\"\"\n                                list.map${fOutD(4, \"(${fInA(3, \")\")}\")}${fInA(3, \" \")}${hl(1, \"{ ${replace(2, \"element -> element\", \"it\")}.toString() }\")}${fOutD(3, \")\")} ${fInA(5, \".reduce { acc, v -> acc + v }\")}\n                            \"\"\"\n                        }\n                    }\n                }\n\n                slide {\n                    h2 { +\"DSL\" }\n\n                    hlCode(\"kotlin\") {\n                        +animText {\n                            \"\"\"\n                                data class AlbumToPlay(val name: String)\n\n                                ${hl(1, \"object\")} play {\n                                    ${fInA(2, \"infix \")}fun album(name: String) = AlbumToPlay(name)\n                                }\n\n                                ${fInA(2, \"infix \")}fun AlbumToPlay.by(band: String) {}\n\n\n                                play${fOut(3, \".\")}album${fOut(3, \"(\")}\"Pacifisticuffs\"${fOut(3, \")\")}${fOutD(3, \".\")}by${fOut(3, \"(\")}\"Diablo Swing Orchestra\"${fOut(3, \")\")}\n                            \"\"\"\n                        }\n                    }\n                }\n\n                slide {\n                    h2 { +\"Operator\" }\n\n                    hlCode(\"kotlin\") {\n                        +animText {\n                            \"\"\"\n                                object db {\n                                    ${fInA(1, \"operator \")}fun get(str: String): Entry {}\n                                    ${fInA(1, \"operator \")}fun set(str: String, value: String) {}\n                                }\n\n                                val entry = db${replace(2, \".get(\", \"[\")}\"key\"${replace(2, \")\", \"]\")}\n                                db${replace(2, \".put(\", \"[\")}key${replace(2, \", \", \"] = \")}value${fOutD(2, \")\")}\n\n\n                                ${fIn(3, \"operator fun Date.plus(other: Date): Date {}\")}\n                            \"\"\"\n                        }\n                    }\n                }\n            }\n\n            section {\n                slide {\n                    h2 { +\"Inline\" }\n\n                    hlCode(\"kotlin\") {\n                        +animText {\n                            \"\"\"\n                                ${fInA(3, \"inline \")}fun <T> Iterable<T>.forEach(action: ${hl(1, \"(T) -> Unit\")}) {\n                                    for (element in this)\n                                        action(element)\n                                }\n\n                                                                 ${fIn(4, \"//Compiled as:\")}\n                                ${fIn(2, \"list.forEach {\")}                   ${fIn(4, \"for (element in list) {\")}\n                                    ${fIn(2, \"println(it.toString())\")}           ${fIn(4, \"println(element.toString())\")}\n                                ${fIn(2, \"}\")}                                ${fIn(4, \"}\")}\n                            \"\"\"\n                        }\n                    }\n\n                    fragment().i { +\"Inlining is \" ; b { +\"forced\" } ; +\"!\" }\n                }\n\n                slide {\n                    h2 { +\"Non-local return\" }\n\n                    hlCode(\"kotlin\") {\n                        +animText {\n                            \"\"\"\n                                ${hl(1, \"fun\")} <T> Iterable<T>.first(predicate: (T) -> Boolean): T {\n                                    this.forEach {\n                                        if (predicate(it))\n                                            ${hl(1, \"return\")}${fInA(2, fOutD(3, \"@forEach\"))} it\n                                    }\n                                    throw NoSuchElementException()\n                                }\n                            \"\"\"\n                        }\n                    }\n                }\n\n                slide {\n                    h2 { +\"Reified types\" }\n\n                    hlCode(\"kotlin\") {\n                        +animText {\n                            \"\"\"\n                                ${fInA(3, \"inline \")}fun <${fInA(3, \"reified \")}T${fInA(3, \": Any \")}> typeName() = T::class.simpleName\n                                                      ${cur(2, error(\"^^^^^^^\"))}\n                                                          ${fIn(4, \"//Compiled as:\")}\n                                ${fIn(1, \"typeName<String>()\")}        ${fIn(4, \"String::class.simpleName()\")}\n                                         ${cur(2, error(\"^^^^^^\"))}\n\n\n                                ${fIn(5, \"${fInA(6, \"inline \")}fun <${fInA(6, \"reified \")}${hl(8, \"T: View\")}> fromLayout(${fOutD(6, \"cls: KClass<T>\")}): ReadOnlyProperty<${hl(8, \"T\")}>\")}\n\n                                ${fIn(7, \"val login${fInA(8, \": EditText\")} by fromLayout${fOutD(8, \"<EditText>\")}()\")}\n                            \"\"\"\n                        }\n                    }\n                }\n            }\n\n            section {\n                slide {\n                    h2 { +\"Let's Rx...\" }\n\n                    hlCode(\"kotlin\") {\n                        +animText {\n                            \"\"\"\n                                class Article(val text: String)\n\n                                fun getFromDB(id: Int): Maybe<Article> ${hl(1, \"= TODO()\")}\n\n                                fun request(id: Int): Single<Article> ${hl(1, \"= TODO()\")}\n\n                                fun backupInDB(article: Article): Completable ${hl(1, \"= TODO()\")}\n                            \"\"\"\n                        }\n                    }\n\n                    br()\n\n                    fragment().hlCode(\"text\") {\n                        style = \"font-size: 85%; line-height: 1.2em; background-color: white\"\n                        +\"\"\"\n                            getArticleText(articleId) =\n                                if article is in local DB\n                                    return article text from local DB\n                                else\n                                    download article\n                                    save downloaded article in local DB\n                                    return downloaded article text\n                        \"\"\"\n                    }\n                }\n\n                slide {\n                    h2 { +\"Using callbacks\" }\n\n                    hlCode(\"kotlin\") {\n                        style = \"font-size: 85%; line-height: 1.2em; background-color: white\"\n                        +animText {\n                            \"\"\"\n                                fun getArticleText(id: Int): Single<String> {\n                                    return ${hl(1, \"\"\"Single.create { emitter ->\n                                        ${hl(2, \"\"\"getFromDB(id).subscribeBy(\n                                                ${hl(3, \"\"\"onSuccess = { article ->\n                                                    ${hl(4, \"emitter.onSuccess(article.text)\")}\n                                                }\"\"\")},\n                                                ${hl(5, \"\"\"onComplete = {\n                                                    ${hl(6, \"\"\"request(id).subscribe { article ->\n                                                        ${hl(7, \"\"\"backupInDB(article).subscribe {\n                                                            ${hl(8, \"emitter.onSuccess(article.text)\")}\n                                                        }\"\"\")}\n                                                    }\"\"\")}\n                                                }\"\"\")}\n                                        )\"\"\")}\n                                    }\"\"\")}\n                                }\n                            \"\"\"\n                        }\n                    }\n\n                    stamp(9).b {\n                        style = \"position: absolute; color: red; left: 15%; top: 45%; font-size: 210%;\"\n                        span {\n                            style = \"display: inline-block; transform: rotate(-15deg)\"\n                            +\"Callback Hell!\"\n                        }\n                    }\n                }\n\n                slide {\n                    h2 { +\"Using composition\" }\n\n                    hlCode(\"kotlin\") {\n                        style = \"font-size: 85%; line-height: 1.2em; background-color: white; max-height: 500px;\"\n                        +animText {\n                            \"\"\"\n                                fun getArticleText(id: Int): Single<String> {\n                                  return ${hl(1, \"getFromDB(id)\")}\n                                          ${hl(2, \".map { it.text }\")}\n                                          ${hl(3, \".defaultIfEmpty(\\\"\\\")\")}\n                                          ${hl(3, \".toSingle()\")}\n                                          ${hl(4, \"\"\".flatMap { txt ->code\n                                              ${hl(5, \"\"\"if (txt.isNotEmpty())\n                                                  ${hl(6, \"Single.just(txt)\")}\"\"\")}\n                                              ${hl(7, \"\"\"else\n                                                  ${hl(8, \"request(id)\")}\n                                                          ${hl(9, \"\"\".flatMap {\n                                                              ${hl(10, \"backupInDB(it)\")}\n                                                              ${hl(11, \".toSingleDefault(it)\")}\n                                                          }\"\"\".trimMargin())}\n                                                          ${hl(12, \".map { it.text }\")}\"\"\")}\n                                              }\n                                          \"\"\")}\n                                }\n                            \"\"\"\n                        }\n                    }\n\n                    stamp(13).b {\n                        style = \"position: absolute; color: red; left: 10%; top: 45%; font-size: 210%;\"\n                        span {\n                            style = \"display: inline-block; transform: rotate(-15deg)\"\n                            +\"Composition Hell!\"\n                        }\n                    }\n\n                }\n\n                slide {\n                    h2 { +\"Using coroutines!\" }\n\n                    hlCode(\"kotlin\") {\n                        style = \"font-size: 85%; line-height: 1.2em; background-color: white\"\n                        +animText {\n                            \"\"\"\n                                fun getArticleText(id: Int): Single<String> {\n                                    return rxSingle {\n                                        val article = ${hl(2, \"getFromDB(id)${hl(1, \".await()\")}\")}\n                                                ${hl(3, \"?: ${hl(4, \"request(id)${hl(1, \".await()\")}\")}${hl(5, \".also { backupInDB(it)${hl(1, \".await()\")} }\")}\")}\n                                        ${hl(6, \"article.text\")}\n                                    }\n                                }\n                            \"\"\"\n                        }\n                    }\n\n                    stamp().h3 {\n                        style = \"font-weight: bold; color: red;\"\n                        span(\"flicker\") {\n                            +\"That is AWESOME!\"\n                        }\n                    }\n\n                    fadeIn().p { +\"...but NOT magic!\" }\n                }\n\n                slide {\n                    h2 { +\"Coroutines...\" }\n\n                    ul {\n                        fadeUp().li { +\"... transform \" ; b { +\"sequential\" } ; +\" code into \" ; b { +\"callbacks\" } ; +\".\" }\n                        fadeUp().li { +\"... are a compiler trick, not runtime magic.\" }\n                        fadeUp().li { +\"... are available through low level primitives.\" }\n                        fadeUp().li {\n                            +\"... libraries are available for a lot of systems:\"\n                            ul {\n                                style = \"font-size: 60%\"\n                                fadeUp().li { +\"kotlinx-coroutines-rx1, kotlinx-coroutines-rx2, kotlinx-coroutines-reactor\" }\n                                fadeUp().li { +\"kotlinx-coroutines-android\" }\n                                fadeUp().li { +\"kotlinx-coroutines-swing, kotlinx-coroutines-javafx\" }\n                                fadeUp().li { +\"kotlinx-coroutines-jdk8, kotlinx-coroutines-nio\" }\n                                fadeUp().li { +\"kotlinx-coroutines-guava, kotlinx-coroutines-quasar\" }\n                            }\n                        }\n                        fadeUp().li {\n                            style = \"font-weight: bold; color: red;\"\n                            +\"... are a freakin' revolutions!\"\n                        }\n                    }\n                }\n            }\n\n            section {\n                slide {\n                    h2 { +\"Platforms...\" }\n\n                    ul {\n                        fadeUp().li { +\"The JVM is here to stay!\" }\n                        fadeUp().li {\n                            +\"But there are other platforms:\"\n                            ul {\n                                style = \"font-size: 80%\"\n                                fadeUp().li {\n                                    +\"JavaScript (Web & Node)\"\n                                    fadeIn().span {\n                                        +\"... \"\n                                        i { +\"please\" }\n                                        +\" don't do node!\"\n                                    }\n                                }\n                                fadeUp().li { +\"WebASM\" }\n                                fadeUp().li { +\"Raspberry Pi\" }\n                                fadeUp().li { +\"Linux, Mac, Windows\" }\n                                fadeUp().li { +\"iOS!!!\" }\n                                fadeUp().li { +\"STM32\" }\n                            }\n                        }\n                    }\n\n                    stamp().div {\n                        style = \"position: absolute; bottom: -7%; left: 55%;\"\n                        span {\n                            style = \"display: inline-block; font-size: 500%; vertical-align: middle; padding-bottom: 25%\"\n                            +\"}\"\n                        }\n                        span {\n                            style = \"font-weight: bold;\"\n                            +\"Native\"\n                        }\n                    }\n                }\n\n                slide {\n                    lazyImg(src = \"imgs/multiplatform.jpg\")\n                }\n\n                slide {\n                    lazyImg(src = \"imgs/common-arch.png\")\n                }\n\n                slide {\n                    lazyImg(src = \"imgs/common-module.png\")\n                }\n\n                slide {\n                    h2 { +\"Common modules\" }\n\n                    small(\"fileName\") { +\"common/build.gradle\" }\n                    hlCode(\"groovy\") {\n                        style = \"font-size: 85%; line-height: 1.2em; background-color: white\"\n                        +animText {\n                            \"\"\"\n                                apply plugin: 'kotlin${fInA(1, \"-platform-common\")}'\n\n                                dependencies {\n                                    compile \"org.jetbrains.kotlin:kotlin-stdlib${fInA(1, \"-common\")}:${'$'}kotlin_version\"\n                                }\n                            \"\"\"\n                        }\n                    }\n\n                    small(\"fileName\") { +\"lib/build.gradle\" }\n                    hlCode(\"groovy\") {\n                        style = \"font-size: 85%; line-height: 1.2em; background-color: white\"\n                        +animText {\n                            \"\"\"\n                                apply plugin: 'kotlin${fInA(2, \"-platform-jvm\")}'\n\n                                dependencies {\n                                    ${replace(3, \"compile\", \"expectedBy\")} project(':common')\n                                    compile \"org.jetbrains.kotlin:kotlin-stdlib:${'$'}kotlin_version\"\n                                }\n                            \"\"\"\n                        }\n                    }\n                }\n\n                slide {\n                    h2 { +\"expect / actual\" }\n\n                    small(\"fileName\") { +\"Common\" }\n                    hlCode(\"kotlin\") {\n                        +animText {\n                            \"\"\"\n                                ${fInA(2, \"expect \")}fun platform(): String\n\n                                fun hello() = println(\"Hello, ${hl(1, \"\\${platform()}\")}!\")\n                            \"\"\"\n                        }\n                    }\n\n                    small(\"fileName\") { +\"JVM\" }\n                    hlCode(\"kotlin\") {\n                        +animText {\n                            \"\"\"\n                                ${fInA(3, \"actual \")}fun platform() = \"JVM\"\n                            \"\"\"\n                        }\n                    }\n                }\n\n                slide {\n                    h2 { +\"Philosophy\" }\n\n                    ul {\n                        style = \"font-size: 90%\"\n                        fadeUp().li { +\"Multiplatform is for \" ; b { +\"business\" } ; +\" code.\" }\n                        fadeUp().li { +\"APIs (including UI) are available for each platform...\" }\n                        fadeUp().li {\n                            +\"...but there is no \\\"one API to rule them all\\\"!\"\n                            br()\n                            fadeIn().b {\n                                style = \"display: block; text-align: right;\"\n                                +\"(except the stdlib)\"\n                            }\n                        }\n                        fadeUp().li {\n                            b { +\"Kotlin/Native\" }\n                            +\" is\"\n                            ul {\n                                style = \"font-size: 90%\"\n                                fadeUp().li { +\"...for iOS (duh)\" }\n                                fadeUp().li { +\"...for embedded systems\" }\n                                fadeUp().li { +\"...for (amazing) performance\" }\n                                fadeUp().li { +\"...powered by a very high perf ARC with cycle detection\" }\n                                fadeUp().li { +\"...for C interop\" }\n                                fadeUp().li { +\"...an \" ; b { +\"amazing tech!!!\" } }\n                            }\n                        }\n                    }\n                }\n            }\n\n            slide {\n                h2 { +\"Tools\" }\n\n                ul {\n                    fadeUp().li { +\"IntelliJ...\" }\n                    fadeUp().li { +\"...same tools as in Java!\" }\n                }\n\n                stamp().b {\n                    style = \"position: absolute; color: blue; left: 36%; top: 54%; font-size: 210%;\"\n                    span {\n                        style = \"display: inline-block; transform: rotate(15deg)\"\n                        +\"Done!\"\n                    }\n                }\n            }\n\n            section {\n                slide {\n                    h2 { +\"Some libraries\" }\n\n                    p {\n                        b { +\"All\" }\n                        +\" libraries that are available for Java are available for Kotlin \"\n                        b { +\"as-is\" }\n                        +\".\"\n                    }\n\n                    fadeIn().p {\n                        +\"Here are \"\n                        i { +\"some\" }\n                        +\" libraries for Kotlin...\"\n                    }\n                }\n\n                slide {\n                    h2 { +\"RxKotlin\" }\n\n                    p { +\"ReactiveX for Kotlin\" }\n\n                    hlCode(\"kotlin\") {\n                        +animText {\n                            \"\"\"\n                                list${hl(1, \".toObservable()\")}\n                                    .filter { it.length >= 5 }\n                                    .${hl(2, \"subscribeBy\")}(\n                                        ${hl(2, \"onNext =\")} { println(it) },\n                                        ${hl(2, \"onError =\")} { it.printStackTrace() },\n                                        ${hl(2, \"onComplete =\")} { println(\"Done!\") }\n                                    )\n                            \"\"\"\n                        }\n                    }\n                }\n\n                slide {\n                    h2 { +\"Kodein\" }\n\n                    p { +\"KOtlin DEpendency INjection\" }\n\n                    hlCode(\"kotlin\") {\n                        +animText {\n                            \"\"\"\n                                val kodein = Kodein {\n                                    ${hl(2, \"${hl(1, \"bind<CredentialsManager>()\")} with singleton\")} { CredsManImpl() }\n                                }\n\n                                val cm: CredentialsManager ${hl(3, \"by kodein.instance()\")}\n                            \"\"\"\n                        }\n                    }\n                }\n\n                slide {\n                    h2 { +\"Kotson\" }\n\n                    p { +\"KOTlin gSON\" }\n\n                    hlCode(\"kotlin\") {\n                        +animText {\n                            \"\"\"\n                                val obj: JsonObject = jsonObject(\n                                    \"name\" ${hl(1, \"to\")} \"kotson\",\n                                    \"creation\" ${hl(1, \"to\")} Date().getTime(),\n                                    \"files\" ${hl(1, \"to\")} 4\n                                )\n\n                                val name = obj${hl(2, \"[\\\"name\\\"]\")}\n                            \"\"\"\n                        }\n                    }\n                }\n\n                slide {\n                    h2 { +\"Ktor\" }\n\n                    p { +\"Non-blocking I/O framework.\" }\n\n                    hlCode(\"kotlin\") {\n                        +animText {\n                            \"\"\"\n                                ${hl(1, \"fun main(args: Array<String>)\")} {\n                                    embeddedServer(Netty, 8080) {\n                                        routing {\n                                            get(\"/\") {\n                                                ${hl(2, \"\"\"call.respondText(\n                                                    \"Hello, world!\",\n                                                    ContentType.Text.Html\n                                                )\"\"\")}\n                                            }\n                                        }\n                                    }.start(wait = true)\n                                }\n                            \"\"\"\n                        }\n                    }\n                }\n\n                slide {\n                    h2 { +\"Spek\" }\n\n                    p { +\"Unit test specifications framework.\" }\n\n                    hlCode(\"kotlin\") {\n                        +animText {\n                            \"\"\"\n                                class SimpleTest : Spek({\n                                    describe(\"a calculator\") {\n                                        val calculator = SampleCalculator()\n\n                                        it(\"should know addition\") {\n                                            assertEquals(6, calculator.sum(2, 4))\n                                        }\n\n                                        it(\"should know substraction\") {\n                                            assertEquals(2, calculator.subtract(4, 2))\n                                        }\n                                    }\n                                })\n                            \"\"\"\n                        }\n                    }\n                }\n\n                slide {\n                    h2 { +\"Spring\" }\n\n                    p { +\"Yeah, spring!\" }\n\n                    fadeUp().i {\n                        +\"Thanks, \"\n                        b { +\"Sebastien Deleuze\" }\n                        +\"!\"\n                    }\n                }\n            }\n\n            section {\n                slide {\n                    h2 { +\"Conclusion\" }\n\n                    p { +\"Kotlin is...\" }\n\n                    ul {\n                        fadeUp().li { +\"Saf\" ; b { +\"er\" } }\n                        fadeUp().li { +\"Easi\" ; b { +\"er\" } }\n                        fadeUp().li { +\"Fresh\" ; b { +\"er\" } }\n                        fadeUp().li { +\"Bett\" ; b { +\"er\" } }\n                    }\n\n                    stamp().i { +\"...and it allows for \" ; b { +\"progressive integration\" } ; +\"!\" }\n                }\n\n                slide {\n                    h2 { +\"So...\" }\n                }\n            }\n\n            slide(transition = \"zoom\") {\n                h2 { +\"Be In,\" ; br() ; +\"Learn Kotlin!\" }\n\n                a(href = \"https://github.com/salomonbrys\") { +\"github.com/salomonbrys\" }\n                br()\n                a(href = \"https://twitter.com/salomonbrys\") { +\"@salomonbrys\" }\n            }\n        }\n    }\n\n\n    val revealRoot = \"out/lib/webjars/reveal.js/3.5.0\"\n\n    Reveal.initialize {\n        slideNumber = true\n        history = true\n        dependencies = arrayOf(\n                RevealPlugins.speakerNotes(revealRoot),\n                RevealPlugins.highlightJs(revealRoot)\n        )\n    }\n}\n"],"names":[],"mappings":"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"}